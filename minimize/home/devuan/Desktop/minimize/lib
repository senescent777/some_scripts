#=================================================PART 0=====================================
#grep /e/n/i ?

odio=$(which sudo)
[ -x ${odio} ] || exit 666

function dqb() {
	[ ${debug} -eq 1 ] && echo ${1}
}

function csleep() {
	[ ${debug} -eq 1 ] && sleep ${1}
}

function check_binaries() {
	dqb "ch3ck_b1nar135()"
	dqb "sudo= ${odio} "
	csleep 1

	ipt=$(sudo which iptables)
	ip6t=$(sudo which ip6tables)
	iptr=$(sudo which iptables-restore)
	ip6tr=$(sudo which ip6tables-restore)
	sco=$(sudo which chown)
	scm=$(sudo which chmod)
	whack=$(sudo which pkill)
	sag=$(sudo which apt-get)
	sa=$(sudo which apt)
	sip=$(sudo which ip)
	snt=$(sudo which netstat)
	sdi=$(sudo which dpkg)
	sifu=$(sudo which ifup)
	sifd=$(sudo which ifdown)
	smr=$(sudo which rm)
	slinky=$(sudo which ln)
	spc=$(sudo which cp)
	srat=$(sudo which tar)

	dqb "half_fdone"
	csleep 1

	[ -x ${ipt} ] || exit 5
	[ -x ${ip6t} ] || exit 5
	[ -x ${iptr} ] || exit 5
	[ -x ${ip6tr} ] || exit 5
	[ -x ${sco} ] || exit 5
	[ -x ${scm} ] || exit 5
	[ -x ${whack} ] || exit 5
	[ -x ${sag} ] || exit 5
	[ -x ${sa} ] || exit 5
	[ -x ${sip} ] || exit 5
	[ -x ${snt} ] || exit 5
	[ -x ${sdi} ] || exit 5
	[ -x ${sifu} ] || exit 5
	[ -x ${sifd} ] || exit 5

	[ -x ${smr} ] || exit 5
	[ -x ${slinky} ] || exit 5
	[ -x ${spc} ] || exit 5
	[ -x ${srat} ] || exit 5

	#TODO:tulisi speksata sudolle tarkemmin millä param on ok noita komentoja ajaa
	ENF_LST="${smr} ${slinky} ${spc}"

	dqb "spc= ${spc}"
	dqb "b1nar135 0k" 
	csleep 3
}

function check_binaries2() {
	dqb "ch3ck_b1nar135.2()"

	ipt="${odio} ${ipt} "
	ip6t="${odio} ${ip6t} "
	iptr="${odio} ${iptr} "
	ip6tr="${odio} ${ip6tr} "

	whack="${odio} ${whack} --signal 9 "
	snt="${odio} ${snt} "
	sharpy="${odio} ${sag} remove --purge --yes "
	sdi="${odio} ${sdi} -i "

	#HUOM. ${sag} VIIMEISENÄ
	shary="${odio} ${sag} --no-install-recommends reinstall --yes "
	sag_u="${odio} ${sag} update "
	sag="${odio} ${sag} "

	sco="${odio} ${sco} "
	scm="${odio} ${scm} "
	sip="${odio} ${sip} "
	sa="${odio} ${sa} "
	sifu="${odio} ${sifu} "
	sifd="${odio} ${sifd} "
	smr="${odio} ${smr} "
	slinky="${odio} ${slinky} -s "
	spc="${odio} ${spc} "
	srat="${odio} ${srat} "

	dqb "spc= ${spc}"
	dqb "b1nar135.2 0k.2" 
	csleep 3
}

function mangle2() {
	if [ -f ${1} ] ; then 
		dqb "MANGLED ${1}"
		sleep 1
		${scm} o-rwx ${1}
		${sco} root:root ${1}
		csleep 1
	fi
}

#VAIH:(wrapper vielä josqs pois)
#mallia https://github.com/senescent777/project/blob/main/opt/bin/install.sh , https://github.com/senescent777/project/blob/main/opt/bin/install.sh , https://github.com/senescent777/project/blob/main/home/devuan/Dpckcer/buildr/source/scripts/part4.sh 
function clouds() {
	dqb "coluds(${1})"
	/opt/bin/clouds.sh ${1}
}

#HUOM.220624:stubbyn asentumisen ja käynnistymisen kannalta sleep saattaa olla tarpeen
function ns2() {
	dqb "ns2( ${1} )"

	${scm} u+w /home

	${odio} /usr/sbin/userdel ${1}
	sleep 3

	${odio} adduser --system ${1}
	sleep 1
	${scm} go-w /home

	[ ${debug} -eq 1 ]  && ls -las /home
	sleep 7
}

function ns4() {
	dqb "ns4( ${1} )"

	${scm} u+w /run
	${odio} touch /run/${1}.pid
	${scm} 0600 /run/${1}.pid
	${sco} ${1}:65534 /run/${1}.pid
	${scm} u-w /run

	sleep 5
	${whack} ${1}*
	sleep 5

	dqb "starting ${1} in 5 secs"

	sleep 5
	${odio} -u ${1} ${1} -g
	echo $?
	sleep 1
	pgrep stubby*
	sleep 5
}

#=========================PART 0 ENDS HERE=================================================================

function part1() {
	#jos jokin näistä kolmesta hoitaisi homman...
	${sifd} ${iface}
	${sifd} -a
	${sip} link set ${iface} down

	[ $? -eq 0 ] || echo "PROBLEMS WITH NETWORK CONNECTION"
	[ ${debug} -eq 1 ] && /sbin/ifconfig;sleep 5 

	for t in INPUT OUTPUT FORWARD ; do 
		${ipt} -P ${t} DROP
		${ip6t} -P ${t} DROP
		${ip6t} -F ${t}
	done

	for t in INPUT OUTPUT FORWARD b c e f ; do ${ipt} -F ${t} ; done

	if [ ${debug} -eq 1 ] ; then
		${ipt} -L #
		${ip6t} -L #
		sleep 5 
	fi #
}

function part3() {
	${sdi} /var/cache/apt/archives/lib*.deb
	[ $? -eq  0 ] && ${odio} rm -rf ${pkgdir}/lib*.deb

	#HUOM. ei kannattane vastata myöntävästi tallennus-kysymykseen?
	${sdi} ${pkgdir}/*.deb
	[ $? -eq 0 ] && ${odio} rm -rf ${pkgdir}/*.deb
	csleep 2
}

#part1?
check_binaries
check_binaries2

function gpo() {
	local prevopt
	local opt
	prevopt=""

	for opt in $@ ; do 
		parse_opts_1 ${opt}
		parse_opts_2 ${prevopt} ${opt}
		prevopt=opt
	done
}

#TODO:gpo jo käyttöön?
#check_params ?