
#=================================================PART 0=====================================
iface=eth0 #grep /e/n/i ?
debug=0

odio=$(which sudo)
[ -x ${odio} ] || exit 666
#exit

function dqb() {
	[ ${debug} -eq 1 ] && echo ${1}
}

function csleep() {
	[ ${debug} -eq 1 ] && sleep ${1}
}

function check_binaries() {
	dqb "ch3ck_b1nar135()"
	dqb "sudo= ${odio} "
	csleep 1

	ipt=$(sudo which iptables)
	ip6t=$(sudo which ip6tables)
	iptr=$(sudo which iptables-restore)
	ip6tr=$(sudo which ip6tables-restore)
	sco=$(sudo which chown)
	scm=$(sudo which chmod)
	whack=$(sudo which pkill)
	sag=$(sudo which apt-get)
	sa=$(sudo which apt)
	sip=$(sudo which ip)
	snt=$(sudo which netstat)
	sdi=$(sudo which dpkg)
	sifu=$(sudo which ifup)
	sifd=$(sudo which ifdown)

	dqb "half_fdone"
	csleep 1

	[ -x ${ipt} ] || exit 5
	[ -x ${ip6t} ] || exit 5
	[ -x ${iptr} ] || exit 5
	[ -x ${ip6tr} ] || exit 5
	[ -x ${sco} ] || exit 5
	[ -x ${scm} ] || exit 5
	[ -x ${whack} ] || exit 5
	[ -x ${sag} ] || exit 5
	[ -x ${sa} ] || exit 5
	[ -x ${sip} ] || exit 5
	[ -x ${snt} ] || exit 5
	[ -x ${sdi} ] || exit 5
	[ -x ${sifu} ] || exit 5
	[ -x ${sifd} ] || exit 5

	dqb "b1nar135 0k" 
	csleep 3
}

function check_binaries2() {
	dqb "ch3ck_b1nar135.2()"

	ipt="sudo ${ipt} "
	ip6t="sudo ${ip6t} "
	iptr="sudo ${iptr} "
	ip6tr="sudo ${ip6tr} "
	whack="sudo ${whack} --signal 9 "
	snt="sudo ${snt} "
	sharpy="sudo ${sag} remove --purge --yes "
	sdi="sudo ${sdi} -i "

	shary="sudo ${sag} --no-install-recommends reinstall --yes "
	sag_u="sudo ${sag} update "
	sag="sudo ${sag} " #HUOM. TÄMÄ VIIMEISENÄ

	sco="sudo ${sco} "
	scm="sudo ${scm} "
	sip="sudo ${sip} "
	sa="sudo ${sa} "
	sifu="sudo ${sifu} "
	sifd="sudo ${sifd} "
}

#HUOM. _s - kutsun oltava ennenq check_binaries2() kutsutaan tjsp.
#HUOM.2. ei niitä {sco}-juttuja ao. fktioon
function mangle_s() {
	if [ -s ${1} ] ; then 
		[ -f /etc/sudoers.d/meshuggah ] || sudo touch /etc/sudoers.d/meshuggah
		#chattr -ui ${1} #chattr ei välttämättä toimi overlay'n tai squashfs'n kanssa
		${dqb} "W3NGL3 $1";sleep 5
		
		sudo chmod 0555 ${1}
		sudo chown root:root  ${1} #uutena tämä
		#chattr +ui ${1}

		sudo chmod a+w  /etc/sudoers.d/meshuggah
		sleep 1
		sudo echo -n "devuan localhost=NOPASSWD: sha256:" >> /etc/sudoers.d/meshuggah

		local s
		s=$(sha256sum ${1})

		sudo echo ${s} >> /etc/sudoers.d/meshuggah
		sleep 1
		sudo chmod a-w  /etc/sudoers.d/meshuggah
		sleep 1
	fi
}

function mangle2() {
	if [ -f ${1} ] ; then 
		dqb "MANGLED $1";sleep 1
		${scm} o-rwx ${1}
		${sco} root:root ${1}
		csleep 1
	fi
}

function pre_enforce() {
	#HUOM.230624 /sbin/dhclient* joutuisi hoitamaan toisella tavalla q mangle_s	

	for f in /sbin/ifup /sbin/ifdown /sbin/halt /sbin/reboot /etc/init.d/stubby /opt/bin/clouds.sh ; do
		mangle_s ${f}
	done

	sudo chown root:root /etc/sudoers.d/meshuggah
	sudo chmod 0440 /etc/sudoers.d/meshuggah
}

function enforce_access() {
	dqb "3nf0rc3_acc355()"

	#ch-jutut siltä varalta että tar sössii oikeudet tai omistajat
	${sco} root:root /home
	${scm} 0755 /home

	local n
	n=$(whoami)

	${scm} -R 0755 ~/Desktop/minimize
	dqb "${sco} -R ${n}:${n} ~"
	${sco} -R ${n}:${n} ~
	${sco} -R 101:65534 /home/stubby/

	if [ ${enforce} -eq 1 ] ; then #käykähän jatkossa turhaksi tämä if-blokki?
		echo "changing /sbin , /etc and /var 4 real"
		${sco} -R root:root /sbin
		${scm} -R 0755 /sbin

		#this part inspired by:https://raw.githubusercontent.com/senescent777/project/main/opt/bin/part0.sh
		${sco} -R root:root /etc
		${scm} -R 0755 /etc
		local f

		#erillinen mangle2 /e/s.d tarpeellinen? vissiin juuri sudoers.d/* takia
		for f in $(find /etc/sudoers.d/ -type f) ; do mangle2 ${f} ; done

		for f in $(find /etc -name 'sudo*' -type f | grep -v log) ; do 
			mangle2 ${f}
			csleep 1
		done

		#sudoersin sisältöä voisi kai tiukentaa kanssa
		${sco} -R root:root /var
		${scm} -R go-w /var

		${scm} 0755 /
		${sco} root:root /
	fi
	
	if [ -s /etc/resolv.conf.new ] && [ -s /etc/resolv.conf.OLD ] ; then
		sudo rm /etc/resolv.conf
	fi

	[ -s /sbin/dclient-script.OLD ] || sudo cp /sbin/dhclient-script /sbin/dhclient-script.OLD
}

#VAIH:siirtymä kohti erillistä skriptiä(wrapper vielä josqs pois)
#mallia https://github.com/senescent777/project/blob/main/opt/bin/install.sh , https://github.com/senescent777/project/blob/main/opt/bin/install.sh , https://github.com/senescent777/project/blob/main/home/devuan/Dpckcer/buildr/source/scripts/part4.sh 
function clouds() {
	dqb "coluds(${1})"
	/opt/bin/clouds.sh ${1}
#
#	sudo rm /etc/resolv.conf
#	sudo rm /etc/dhcp/dhclient.conf
#	sudo rm /sbin/dhclient-script
#
#	#tässä oikea paikka tables-muutoksille vai ei?
#	${ipt} -F b;${ipt} -F e
#	${ipt} -D INPUT 5; ${ipt} -D OUTPUT 6
#	local s
#
#	case ${1} in 
#		0)
#			sudo ln -s /etc/resolv.conf.OLD /etc/resolv.conf
#			sudo ln -s /etc/dhcp/dhclient.conf.OLD /etc/dhcp/dhclient.conf
#			sudo cp /sbin/dhclient-script.OLD /sbin/dhclient-script
#
#			${ipt} -A INPUT -p udp -m udp --sport 53 -j b 
#			${ipt} -A OUTPUT -p udp -m udp --dport 53 -j e
#			for s in $(grep -v '#' /etc/resolv.conf.OLD | grep names | grep -v 127. | awk '{print $2}') ; do dda_snd ${s} ; done	
#		;;
#		1)
#			sudo ln -s /etc/resolv.conf.new /etc/resolv.conf
#			sudo ln -s /etc/dhcp/dhclient.conf.new /etc/dhcp/dhclient.conf
#			sudo cp /sbin/dhclient-script.new /sbin/dhclient-script
#		
#			${ipt} -A INPUT -p tcp -m tcp --sport 853 -j b
#			${ipt} -A OUTPUT -p tcp -m tcp --dport 853 -j e
#			for s in $(grep -v '#' /home/stubby/.stubby.yml | grep address_data | cut -d ':' -f 2) ; do tod_dda ${s} ; done
#		;;
#	esac
#
#	${scm} 0444 /etc/resolv.conf*
#	${sco} root:root /etc/resolv.conf*
#
#	${scm} 0444 /etc/dhcp/dhclient*
#	${sco} root:root /etc/dhcp/dhclient*
#	${scm} 0755 /etc/dhcp
#
#	${scm} 0555 /sbin/dhclient*
#	${sco} root:root /sbin/dhclient*
#	${scm} 0755 /sbin
#
#	${sco} -R root:root /etc/iptables
#	${scm} 0400 /etc/iptables/*
#	${scm} 0750 /etc/iptables
# 
#	sleep 2
#
#	if [ ${debug} -eq 1 ] ; then
#		${ipt} -L  #
#		${ip6t} -L #
#		sleep 5
#	fi #
}

#HUOM.220624:stubbyn asentumisen ja käynnistymisen kannalta sleep saattaa olla tarpeen
function ns2() {
	dqb "ns2( ${1} )"

	${scm} u+w /home

	sudo /usr/sbin/userdel ${1}
	sleep 3

	sudo adduser --system ${1}
	${scm} go-w /home

	[ ${debug} -eq 1 ]  && ls -las /home
	sleep 7
}

function ns4() {
	dqb "ns4( ${1} )"

	${scm} u+w /run
	sudo touch /run/${1}.pid
	${scm} 0600 /run/${1}.pid
	${sco} ${1}:65534 /run/${1}.pid
	${scm} u-w /run

	sleep 5
	${whack} ${1}*
	sleep 5

	dqb "starting ${1} in 5 secs"

	sleep 5
	sudo -u ${1} ${1} -g
	echo $?
	sleep 1
	pgrep stubby*
	sleep 5
}
#=========================PART 0 ENDS HERE=================================================================

function part1() {
	#jos jokin näistä kolmesta hoitaisi homman...
	${sifd} ${iface}
	${sifd} -a
	${sip} link set ${iface} down

	[ $? -eq 0 ] || echo "PROBLEMS WITH NETWORK CONNECTION"
	[ ${debug} -eq 1 ] && /sbin/ifconfig;sleep 5 

	for t in INPUT OUTPUT FORWARD ; do 
		${ipt} -P ${t} DROP
		${ip6t} -P ${t} DROP
		${ip6t} -F ${t}
	done

	for t in INPUT OUTPUT FORWARD b c e f ; do ${ipt} -F ${t} ; done

	if [ ${debug} -eq 1 ] ; then
		${ipt} -L #
		${ip6t} -L #
		sleep 5 
	fi #
}

function part3() {
	${sdi} /var/cache/apt/archives/lib*.deb
	[ $? -eq  0 ] && sudo rm -rf ${pkgdir}/lib*.deb

	#HUOM. ei kannattane vastata myöntävästi tallennus-kysymykseen?
	${sdi} ${pkgdir}/*.deb
	[ $? -eq 0 ] && sudo rm -rf ${pkgdir}/*.deb
	csleep 2
}

#part1?
#check_binaries
#check_inaries2